#!/bin/sh
#
#

X11_MODE=0
MWF_MODE=1
COCOASHARP_MODE=0

PWD=`pwd`
# Fetch the path relative to the launch point where this shell script exists.
APP_PATH=`echo $0 | awk '{split($0,patharr,"/"); idx=1; while(patharr[idx+3] != "") { if (patharr[idx] != "/") {printf("%s/", patharr[idx]); idx++ }} }'`

# Fetch the app name (its our own name)
APP_NAME=`echo $0 | awk '{split($0,patharr,"/"); idx=1; while(patharr[idx+1] != "") {idx++} printf("%s", patharr[idx]); }'`
ASSEMBLY=`echo $0 | awk '{split($0,patharr,"/"); idx=1; while(patharr[idx+1] != "") {idx++} printf("%s.exe", patharr[idx]); }'`

#mono version check
REQUIRED_MAJOR=2
REQUIRED_MINOR=10
REQUIRED_MINOR_SUB=9

VERSION_TITLE="Cannot launch $APP_NAME"
VERSION_MSG="Radegast requires Mono Framework version 2.10.9 build 12. Select Download to install this framework and then restart SpotEditor."
DOWNLOAD_URL="http://download.mono-project.com/archive/2.10.9/macos-10-x86/12/MonoFramework-MDK-2.10.9_12.macos10.xamarin.x86.dmg"
 
MONO_VERSION="$(mono --version | grep 'Mono JIT compiler version ' |  cut -f5 -d\ )"
MONO_VERSION_MAJOR="$(echo $MONO_VERSION | cut -f1 -d.)"
MONO_VERSION_MINOR="$(echo $MONO_VERSION | cut -f2 -d.)"
MONO_VERSION_MINOR_SUB="$(echo $MONO_VERSION | cut -f3 -d.)"

if [ -z "$MONO_VERSION" ] \
	|| [ $MONO_VERSION_MAJOR != $REQUIRED_MAJOR ] \
	|| [ $MONO_VERSION_MINOR != $REQUIRED_MINOR] \
	|| [ $MONO_VERSION_MINOR_SUB != $REQUIRED_MINOR_SUB]
then
	osascript \
	-e "set question to display dialog \"$VERSION_MSG\" with title \"$VERSION_TITLE\" buttons {\"Cancel\", \"Download...\"} default button 2" \
	-e "if button returned of question is equal to \"Download...\" then open location \"$DOWNLOAD_URL\""
	echo "$VERSION_TITLE"
	echo "$VERSION_MSG"
	exit 1
fi

# Setup the environment for MWF if needed
if [ "$MWF_MODE" -eq "1" ]; then
	export MONO_MWF_MAC_FORCE_X11=1  
fi

# Setup the environment for Cocoa# if needed
if [ "$COCOASHARP_MODE" -eq "1" ]; then
	export MONO_GDIP_USE_COCOA_BACKEND=1
	export DYLD_LIBRARY_PATH=$PWD/$APP_PATH/Contents/Resources:$DYLD_LIBRARY_PATH
fi

cd "$APP_PATH/Contents/Resources"

if [ "$X11_MODE" -eq "1" ]; then
	open-x11 "$APP_NAME"
else
	if [ ! -d "./bin" ]; then mkdir bin ; fi
	if [ -f "./bin/$APP_NAME" ]; then rm -f "./bin/$APP_NAME" ; fi
	ln -s `which mono` "./bin/$APP_NAME" 
	"./bin/$APP_NAME" "$ASSEMBLY"
fi
